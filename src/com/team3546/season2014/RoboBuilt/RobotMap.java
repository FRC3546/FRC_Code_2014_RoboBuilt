// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package com.team3546.season2014.RoboBuilt;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static DoubleSolenoid pickupArmArmMovementSolenoid;
    public static SpeedController pickupArmPickupArmMotor;
    public static DoubleSolenoid backboardBackboardSolenoid;
    public static DoubleSolenoid shooterShooterReleaseSolenoid;
    public static SpeedController shooterShooterWinchMotor;
    public static DigitalInput shooterIntialShooterLimitSwitch;
    public static DigitalInput shooterFinalShooterLimitSwitch1;
    public static DigitalInput shooterFinalShooterLimitSwitch2;
    public static DoubleSolenoid shooterSecondaryShooterReleaseSolenoid;
    public static SpeedController driveTrainFrontLeft;
    public static SpeedController driveTrainFrontRight;
    public static SpeedController driveTrainBackLeft;
    public static SpeedController driveTrainBackRight;
    public static RobotDrive driveTrainRobotDrive4;
    public static DoubleSolenoid driveTrainShifterSolenoid;
    public static Relay lightsLights;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static Compressor pneumaticSystemCompressor;
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        pickupArmArmMovementSolenoid = new DoubleSolenoid(1, 7, 8);      
	
        
        pickupArmPickupArmMotor = new Victor(1, 6);
	LiveWindow.addActuator("Pickup Arm", "Pickup Arm Motor", (Victor) pickupArmPickupArmMotor);
        
        backboardBackboardSolenoid = new DoubleSolenoid(1, 5, 6);      
	
        
        shooterShooterReleaseSolenoid = new DoubleSolenoid(1, 3, 4);      
	
        
        shooterShooterWinchMotor = new Victor(1, 5);
	LiveWindow.addActuator("Shooter", "Shooter Winch Motor", (Victor) shooterShooterWinchMotor);
        
        shooterIntialShooterLimitSwitch = new DigitalInput(1, 1);
	LiveWindow.addSensor("Shooter", "Intial Shooter Limit Switch", shooterIntialShooterLimitSwitch);
        
        shooterFinalShooterLimitSwitch1 = new DigitalInput(1, 7);
	LiveWindow.addSensor("Shooter", "Final Shooter Limit Switch 1", shooterFinalShooterLimitSwitch1);
        
        shooterFinalShooterLimitSwitch2 = new DigitalInput(1, 8);
	LiveWindow.addSensor("Shooter", "Final Shooter Limit Switch 2", shooterFinalShooterLimitSwitch2);
        
        shooterSecondaryShooterReleaseSolenoid = new DoubleSolenoid(2, 1, 2);      
	
        
        driveTrainFrontLeft = new Jaguar(1, 1);
	LiveWindow.addActuator("Drive Train", "Front Left", (Jaguar) driveTrainFrontLeft);
        
        driveTrainFrontRight = new Jaguar(1, 4);
	LiveWindow.addActuator("Drive Train", "Front Right", (Jaguar) driveTrainFrontRight);
        
        driveTrainBackLeft = new Jaguar(1, 3);
	LiveWindow.addActuator("Drive Train", "Back Left", (Jaguar) driveTrainBackLeft);
        
        driveTrainBackRight = new Jaguar(1, 2);
	LiveWindow.addActuator("Drive Train", "Back Right", (Jaguar) driveTrainBackRight);
        
        driveTrainRobotDrive4 = new RobotDrive(driveTrainFrontLeft, driveTrainBackLeft,
              driveTrainFrontRight, driveTrainBackRight);
	
        driveTrainRobotDrive4.setSafetyEnabled(true);
        driveTrainRobotDrive4.setExpiration(0.1);
        driveTrainRobotDrive4.setSensitivity(0.5);
        driveTrainRobotDrive4.setMaxOutput(1.0);
        driveTrainRobotDrive4.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        driveTrainRobotDrive4.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        driveTrainShifterSolenoid = new DoubleSolenoid(1, 1, 2);      
	
        
        lightsLights = new Relay(1, 1);
	LiveWindow.addActuator("Lights", "Lights", lightsLights);
        
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        pneumaticSystemCompressor = new Compressor(1, 2, 1, 2);
    }
}
