// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package com.team3546.season2014.RoboBuilt.subsystems;
import com.team3546.season2014.RoboBuilt.Robot;
import com.team3546.season2014.RoboBuilt.RobotMap;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
/**
 * Contains a doubleSolenoid to control the position of the arms, and a speed controller for the arm motors
 * Initializes the arms to retracted
 * Initializes the motor to off
 */
public class PickupArm extends Subsystem {
    public static final DoubleSolenoid.Value pickupArmOut = DoubleSolenoid.Value.kForward;
    public static final DoubleSolenoid.Value pickupArmIn = DoubleSolenoid.Value.kReverse;
    public static final double pickupArmMotorOut = -Robot.pickupArmMotorSpeed;
    public static final double pickupArmMotorIn = Robot.pickupArmMotorSpeed;
    public static final double pickupArmMotorOff = 0;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    DoubleSolenoid armMovementSolenoid = RobotMap.pickupArmArmMovementSolenoid;
    SpeedController pickupArmMotor = RobotMap.pickupArmPickupArmMotor;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        //Initialize the arms to retracted
        armMovementSolenoid.set(pickupArmIn);
        pickupArmMotor.set(pickupArmMotorOff);
    }
    /**
     * Set the position of the arms
     * @param position position
     */
    public void setArmMovementSolenoid(DoubleSolenoid.Value position) {
        armMovementSolenoid.set(position);
    }
    /**
     * Sets the state of the pickup motor
     * @param setPoint constant defined in PickupArm class
     */
    public void setPickupArmMotor(double setPoint) {
        pickupArmMotor.set(setPoint);
    }
}
